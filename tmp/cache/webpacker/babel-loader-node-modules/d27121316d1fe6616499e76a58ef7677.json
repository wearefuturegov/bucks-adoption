{"ast":null,"code":"var _jsxFileName = \"/Users/chrisevans/Desktop/github/bucks-adoption/app/javascript/components/Recommendations/index.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Filters from \"../Filters\";\nimport Alert from \"../Alert\";\nimport Switch from \"../Switch\";\nimport ServicesGrid from \"../ServicesGrid\";\nimport AdviceSnippetsGrid from \"../AdviceSnippetGrid\";\nimport ListMap from \"../Maps\";\nimport \"./style.scss\";\nimport { listFavourites, addFavourite, removeFavourite } from \"../../lib/localStorage\";\nimport { logEvent } from \"../../lib/analytics\";\n\nvar Recommendations = function Recommendations(_ref) {\n  var services = _ref.services,\n      snippets = _ref.snippets,\n      query = _ref.query,\n      onLoadMore = _ref.onLoadMore,\n      moreToLoad = _ref.moreToLoad,\n      totalServices = _ref.totalServices,\n      loading = _ref.loading;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dialogOpen = _useState2[0],\n      toggleDialog = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapOpen = _useState4[0],\n      toggleMap = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      favourites = _useState6[0],\n      setFavourites = _useState6[1];\n\n  var fave = function fave(service) {\n    var serviceToSave = Object.assign({}, service);\n    delete serviceToSave.distance;\n    setFavourites(favourites.concat(serviceToSave));\n    addFavourite(serviceToSave);\n    logEvent(\"Recommendations\", \"Save a service\");\n  };\n\n  var unfave = function unfave(id) {\n    var remainingFaves = favourites.filter(function (service) {\n      if (service.assetId !== id) return service;\n    });\n    setFavourites(remainingFaves);\n    removeFavourite(id);\n    logEvent(\"Recommendations\", \"Unsave a service\");\n  };\n\n  useEffect(function () {\n    setFavourites(listFavourites());\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Filters, {\n    locationFilterIsOpen: dialogOpen,\n    toggleLocationFilterDialog: toggleDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"recommendations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, query.formattedLocation === \"Buckinghamshire, UK\" && React.createElement(Alert, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"That location doesn't look right.  \", React.createElement(\"button\", {\n    className: \"alert__button\",\n    onClick: function onClick() {\n      toggleDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Check now\")), favourites && favourites.length > 0 && React.createElement(\"section\", {\n    className: \"saved\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"services__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"services__section-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Your favourites\")), React.createElement(ServicesGrid, {\n    services: favourites,\n    className: \"services__grid--with-columns\",\n    fave: fave,\n    unfave: unfave,\n    favourites: favourites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"services\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"services__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"services__section-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Showing \", services.length, \" of \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, totalServices), \" services nearest \", query.formattedLocation ? query.formattedLocation : \"you\"), services.length > 0 && React.createElement(Switch, {\n    name: \"show-map\",\n    checked: mapOpen,\n    onChange: function onChange() {\n      toggleMap(!mapOpen);\n      logEvent(\"Recommendations\", \"Toggle map view\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), mapOpen && services.length > 0 && React.createElement(ListMap, {\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      className: \"list-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }),\n    lat: parseFloat(query.lat),\n    lng: parseFloat(query.lng),\n    services: services,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(ServicesGrid, {\n    services: services,\n    query: query,\n    loading: loading,\n    moreToLoad: moreToLoad,\n    onLoadMore: onLoadMore,\n    className: \"services__grid--with-columns\",\n    fave: fave,\n    unfave: unfave,\n    favourites: favourites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), snippets.length > 0 && React.createElement(\"section\", {\n    className: \"advice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"advice__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"advice__section-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Advice for you\")), React.createElement(AdviceSnippetsGrid, {\n    snippets: snippets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))));\n};\n\nexport default Recommendations;","map":{"version":3,"sources":["/Users/chrisevans/Desktop/github/bucks-adoption/app/javascript/components/Recommendations/index.jsx"],"names":["React","useState","useEffect","Filters","Alert","Switch","ServicesGrid","AdviceSnippetsGrid","ListMap","listFavourites","addFavourite","removeFavourite","logEvent","Recommendations","services","snippets","query","onLoadMore","moreToLoad","totalServices","loading","dialogOpen","toggleDialog","mapOpen","toggleMap","favourites","setFavourites","fave","service","serviceToSave","Object","assign","distance","concat","unfave","id","remainingFaves","filter","assetId","formattedLocation","length","height","parseFloat","lat","lng"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Filters from \"../Filters\"\nimport Alert from \"../Alert\"\nimport Switch from \"../Switch\"\nimport ServicesGrid from \"../ServicesGrid\"\nimport AdviceSnippetsGrid from \"../AdviceSnippetGrid\"\nimport ListMap from \"../Maps\"\nimport \"./style.scss\"\nimport {listFavourites, addFavourite, removeFavourite} from \"../../lib/localStorage\"\nimport {logEvent} from \"../../lib/analytics\"\n\nconst Recommendations = ({\n    services,\n    snippets, \n    query, \n    onLoadMore, \n    moreToLoad, \n    totalServices, \n    loading\n}) => {\n    const [dialogOpen, toggleDialog] = useState(false)\n    const [mapOpen, toggleMap] = useState(false)\n\n    const [favourites, setFavourites] = useState([])\n\n    const fave = (service) => {\n        let serviceToSave = Object.assign({}, service)\n        delete serviceToSave.distance\n        setFavourites(favourites.concat(serviceToSave))\n        addFavourite(serviceToSave)\n        logEvent(\"Recommendations\", \"Save a service\")\n    }\n\n    const unfave = (id) => {\n        let remainingFaves = favourites.filter(service =>{\n            if(service.assetId !== id) return service\n        })\n        setFavourites(remainingFaves)\n        removeFavourite(id)\n        logEvent(\"Recommendations\", \"Unsave a service\")\n    }\n\n    useEffect(()=>{\n        setFavourites(listFavourites())\n    }, [])\n\n    return (\n        <>\n            <Filters\n                locationFilterIsOpen={dialogOpen}\n                toggleLocationFilterDialog={toggleDialog}\n            />\n            <section className=\"recommendations\">\n                <div className=\"container\">\n                    {(query.formattedLocation === \"Buckinghamshire, UK\") && <Alert>That location doesn't look right.  <button className=\"alert__button\" onClick={()=>{\n                        toggleDialog(true)\n                    }}>Check now</button></Alert>}\n\n                    {(favourites && favourites.length > 0) &&\n                        <section className=\"saved\">\n                            <header className=\"services__header\">\n                                <h2 className=\"services__section-title\">Your favourites</h2>\n                            </header>\n                            <ServicesGrid\n                                services={favourites}\n                                className=\"services__grid--with-columns\"\n                                fave={fave}\n                                unfave={unfave}\n                                favourites={favourites}\n                            />\n                        </section>                    \n                    }\n\n                    <section className=\"services\">\n                        <header className=\"services__header\">\n                            <h2 className=\"services__section-title\">Showing {services.length} of <strong>{totalServices}</strong> services nearest {query.formattedLocation ? query.formattedLocation : \"you\"}</h2>\n                            {services.length > 0 && \n                                <Switch\n                                    name=\"show-map\"\n                                    checked={mapOpen}\n                                    onChange={()=>{\n                                        toggleMap(!mapOpen)\n                                        logEvent(\"Recommendations\", \"Toggle map view\")\n                                    }}\n                                />\n                            }\n                        </header>\n                        {(mapOpen && services.length > 0) &&\n                            <ListMap\n                                loadingElement={<div style={{ height: \"100%\" }} />}\n                                containerElement={<div style={{ height: \"100%\" }} />}\n                                mapElement={<div className=\"list-map\" />}\n                                lat={parseFloat(query.lat)}\n                                lng={parseFloat(query.lng)}\n                                services={services}\n                            />\n                        }\n                        <ServicesGrid\n                            services={services}\n                            query={query}\n                            loading={loading}\n                            moreToLoad={moreToLoad}\n                            onLoadMore={onLoadMore}\n                            className=\"services__grid--with-columns\"\n                            fave={fave}\n                            unfave={unfave}\n                            favourites={favourites}\n                        />\n                    </section>\n                    {snippets.length > 0 && \n                        <section className=\"advice\">\n                            <header className=\"advice__header\">\n                                <h2 className=\"advice__section-title\">Advice for you</h2>\n                            </header>\n                            <AdviceSnippetsGrid snippets={snippets}/>\n                        </section>\n                    }\n                </div>\n            </section>\n        </>\n    )\n}\n\n\nexport default Recommendations"]},"metadata":{},"sourceType":"module"}